--1

-- SELECT EXTRACT (YEAR FROM COL_DATE), COUNT(*) 
-- FROM CASE
-- GROUP BY EXTRACT (YEAR FROM COL_DATE)


--2

--SELECT VE_MAKE, COUNT(*) AS N_COLLISION
--FROM (VEHICLE INNER JOIN PARTY_INVOLVE ON VEHICLE.VE_NUM = PARTY_INVOLVE.VE_NUM)
--GROUP BY VE_MAKE
--ORDER BY N_COLLISION DESC
--FETCH FIRST 1 ROWS ONLY


--3

--SELECT NOM/(SELECT COUNT(*) FROM CASE)
--FROM
--    (SELECT COUNT(*) AS NOM
--    FROM CASE
--    WHERE CASE.LIGHTING LIKE '%dark%')
    

--4

--SELECT COUNT(*) 
--FROM WEATHER
--WHERE WEATHER_CON LIKE '%SNOWING%'


--5

--SELECT TO_CHAR(COL_DATE, 'D') AS WEEK_DAY, COUNT(*) AS N_COLLISONS
--FROM CASE
--GROUP BY TO_CHAR(COL_DATE, 'D')
--ORDER BY N_COLLISONS DESC
--FETCH FIRST 1 ROWS ONLY


--6

--SELECT WEATHER_CON, COUNT(*) AS N_COLLISION
--FROM WEATHER
--GROUP BY WEATHER_CON
--ORDER BY N_COLLISION


--7

--SELECT COUNT(*) AS N_PARTIES 
--FROM PARTY_INVOLVE P, ROAD_CON R
--WHERE P.CASE_ID = R.CASE_ID AND P.AT_FAULT = 1 AND P.FIN_RESP = 'Y' AND R.ROAD_CON LIKE '%loose material%'


-- 8 



----------------------------------------------------------------------------------------------

--1

--SELECT 
--(CASE WHEN AGE<=18 THEN 'underage'
--WHEN AGE BETWEEN 19 and 21 then 'young I'
--when AGE BETWEEN 22 AND 24 THEN 'young II'
--when AGE BETWEEN 24 AND 60 THEN 'adult'
--when AGE BETWEEN 61 AND 64 THEN 'elder I'
--ELSE 'elder II' END) as AGE_RANGE, 
--SUM(AT_FAULT)/COUNT (*) as ratio
--FROM (SELECT AGE, AT_FAULT FROM PARTY_INVOLVE WHERE PARTY_TYPE = 'driver')
--group by (CASE WHEN AGE<=18 THEN 'underage'
--WHEN AGE BETWEEN 19 and 21 then 'young I'
--when AGE BETWEEN 22 AND 24 THEN 'young II'
--when AGE BETWEEN 24 AND 60 THEN 'adult'
--when AGE BETWEEN 61 AND 64 THEN 'elder I'
--ELSE 'elder II' END)


--2

--SELECT VE_TYPE, COUNT(*) AS COUNT
--FROM
--    (SELECT VEHICLE.VE_TYPE, PARTY_INVOLVE.CASE_ID
--    FROM PARTY_INVOLVE, VEHICLE, ROAD_EN
--    WHERE ROAD_EN.ROAD_CON LIKE '%holes%'
--    AND ROAD_EN.CASE_ID = PARTY_INVOLVE.CASE_ID
--    AND VEHICLE.VE_NUM = PARTY_INVOLVE.VE_NUM)
--GROUP BY VE_TYPE
--ORDER BY COUNT DESC
--FETCH FIRST 5 ROWS ONLY

--3

-- SELECT VE_MAKE, COUNT(VIC_ID) AS COUNT 
-- FROM VEHICLE, PARTY_INVOLVE, ASSOCIATE_VICTIM
-- WHERE VEHICLE.VE_NUM = PARTY_INVOLVE.VE_NUM
-- AND ASSOCIATE_VICTIM.PARTY_ID = PARTY_INVOLVE.PARTY_ID
-- AND (ASSOCIATE_VICTIM.DEG_INJURY LIKE '%severe injury%' OR ASSOCIATE_VICTIM.DEG_INJURY LIKE '%killed%')
-- GROUP BY VE_MAKE
-- ORDER BY COUNT DESC
-- FETCH FIRST 10 ROWS ONLY


--4

SELECT VIC_ID, VIC_SEAT, DEG_INJURY, COUNT OVER (PARTITION BY VIC_SEAT)
FROM ASSOCIATE_VICTIM




    